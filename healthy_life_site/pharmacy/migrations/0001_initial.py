# Generated by Django 5.1.2 on 2024-11-06 19:04

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GoodsReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Время написания')),
                ('date_change', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('message', models.TextField(max_length=4096, verbose_name='Сообщение')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Отображается'), (1, 'Удалено')], default=0, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='LoyaltyCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_status', models.PositiveSmallIntegerField(choices=[(0, 'Активирована'), (1, 'Заблокирована')], default=0, verbose_name='Тип товара')),
                ('bonuses', models.IntegerField(default=0, verbose_name='Количество бонусов')),
            ],
            options={
                'verbose_name': 'Карта лояльности',
                'verbose_name_plural': 'Карты лояльности',
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promo_code', models.CharField(max_length=64, verbose_name='Промокод')),
                ('is_used', models.BooleanField(default=False, verbose_name='Ипользован')),
                ('time_action', models.DateTimeField(verbose_name='Время действия')),
            ],
            options={
                'verbose_name': 'Промокод',
                'verbose_name_plural': 'Промокоды',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_end_promotion', models.DateTimeField(verbose_name='Время конца скидки')),
                ('promotion_percentage', models.SmallIntegerField(verbose_name='Процент скидки')),
            ],
            options={
                'verbose_name': 'Скидка',
                'verbose_name_plural': 'Скидки',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_buy', models.DateField(verbose_name='Время покупки')),
                ('for_money', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Купил за сумму')),
                ('amount', models.SmallIntegerField(default=1, verbose_name='Количество купленного товара')),
            ],
            options={
                'verbose_name': 'Покупка',
                'verbose_name_plural': 'Покупки',
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.SmallIntegerField(default=1, verbose_name='Количество в корзине')),
            ],
            options={
                'verbose_name': 'Товар в карзине',
                'verbose_name_plural': 'Товары в карзинах',
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название товара')),
                ('photo', models.ImageField(default='default/photo_goods.png', upload_to='goods/%Y/%m/%d/', verbose_name='Фотография')),
                ('available_delivery', models.BooleanField(default=False, verbose_name='Есть доставка')),
                ('prescription_only', models.BooleanField(default=False, verbose_name='Только по рецепту')),
                ('type_goods', models.PositiveSmallIntegerField(choices=[(0, 'Другое'), (1, 'Лекарство'), (2, 'Медицинские изделие'), (3, 'Косметика'), (4, 'Гигиена'), (5, 'Добавки и витамины')], default=0, verbose_name='Тип товара')),
                ('goods_info', models.CharField(max_length=2048, verbose_name='Информарция о товаре')),
                ('price', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Цена')),
                ('amount', models.SmallIntegerField(default=0, verbose_name='Количество товаров')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'constraints': [models.CheckConstraint(condition=models.Q(('price__gte', 0)), name='price_goods_CK'), models.CheckConstraint(condition=models.Q(('amount__gte', 0)), name='amount_goods_CK')],
            },
        ),
        migrations.CreateModel(
            name='GoodsRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.DecimalField(decimal_places=2, max_digits=3, verbose_name='Оценка')),
                ('rating_goods', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating_goods_fk', to='pharmacy.goods', verbose_name='Оцениваемый товар')),
            ],
            options={
                'verbose_name': 'Оценка товара',
                'verbose_name_plural': 'Оценки товарав',
            },
        ),
    ]
