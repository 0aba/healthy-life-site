# Generated by Django 5.1.2 on 2024-11-06 19:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pharmacy', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='goodsrating',
            name='user_grade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_grade_fk', to=settings.AUTH_USER_MODEL, verbose_name='Оценка пользователя'),
        ),
        migrations.AddField(
            model_name='goodsreview',
            name='goods_review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goods_review_fk', to='pharmacy.goods', verbose_name='Отзыв'),
        ),
        migrations.AddField(
            model_name='goodsreview',
            name='reply',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_reply', to='pharmacy.goodsreview', verbose_name='Ответ на сообщение'),
        ),
        migrations.AddField(
            model_name='goodsreview',
            name='wrote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_wrote', to=settings.AUTH_USER_MODEL, verbose_name='Написал'),
        ),
        migrations.AddField(
            model_name='loyaltycard',
            name='user_card',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_card_fk', to=settings.AUTH_USER_MODEL, verbose_name='Карта пользователя'),
        ),
        migrations.AddField(
            model_name='promocode',
            name='promo_code_goods_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promo_code_goods_fk', to='pharmacy.goods', verbose_name='Промокод на товар'),
        ),
        migrations.AddField(
            model_name='promotion',
            name='promotions_goods_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotions_goods_fk', to='pharmacy.goods', verbose_name='Скидка на товар'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='goods_buy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goods_buy_fk', to='pharmacy.goods', verbose_name='Покупаемый товар'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='user_buy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_buy_fk', to='pharmacy.goods', verbose_name='Покупатель'),
        ),
        migrations.AddField(
            model_name='shoppingcart',
            name='goods_cart',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goods_cart_fk', to='pharmacy.goods', verbose_name='Товар в корзине'),
        ),
        migrations.AddField(
            model_name='shoppingcart',
            name='user_cart',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_cart_fk', to=settings.AUTH_USER_MODEL, verbose_name='Корзина пользователя'),
        ),
        migrations.AddConstraint(
            model_name='goodsrating',
            constraint=models.CheckConstraint(condition=models.Q(('grade__gte', 0.0), ('grade__lte', 5.0)), name='grade_CK'),
        ),
        migrations.AlterUniqueTogether(
            name='goodsrating',
            unique_together={('rating_goods', 'user_grade')},
        ),
        migrations.AddConstraint(
            model_name='promotion',
            constraint=models.CheckConstraint(condition=models.Q(('promotion_percentage__gte', 10), ('promotion_percentage__lte', 90)), name='promotion_percentage_CK'),
        ),
        migrations.AddConstraint(
            model_name='purchase',
            constraint=models.CheckConstraint(condition=models.Q(('for_money__gte', 0)), name='price_purchase_CK'),
        ),
        migrations.AddConstraint(
            model_name='purchase',
            constraint=models.CheckConstraint(condition=models.Q(('amount__gt', 0)), name='amount_purchase_CK'),
        ),
        migrations.AddConstraint(
            model_name='shoppingcart',
            constraint=models.CheckConstraint(condition=models.Q(('amount__gt', 0)), name='amount_CK'),
        ),
        migrations.AlterUniqueTogether(
            name='shoppingcart',
            unique_together={('goods_cart', 'user_cart')},
        ),
    ]
